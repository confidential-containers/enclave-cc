name: basic build and unit tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  # shim basic test
  shim:
    name: shim basic test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        go-version: [1.23.x]

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: src/shim/go.sum

      - name: Run build
        run: |
          make binaries
        working-directory: src/shim

      - name: Run unit test
        run: |
          go test -v ./...
        working-directory: src/shim

      - name: golangci-lint
        uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6
        with:
          version: v1.60.3
          args: -v --timeout 5m
          working-directory: 'src/shim'

  rust:
    name: rust basic checks
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
        project:
          - enclave-agent
          - runtime-boot/init

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@ed2356ad628626a6b3f5be6c3e0255c0454fcdb9 # stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
          components: rustfmt, clippy

      - run: cargo fmt --check --manifest-path=src/${{ matrix.project }}/Cargo.toml

      - run: cargo clippy --manifest-path=src/${{ matrix.project }}/Cargo.toml

      - name: Run Tests
        if: ${{ matrix.project == 'enclave-agent' }}
        run: cargo test --features simple --no-default-features --manifest-path=src/${{ matrix.project }}/Cargo.toml
