name: basic build and unit tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  # shim basic test
  shim:
    name: shim basic test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      matrix:
        os: [ubuntu-22.04]
        go-version: [1.20.x, 1.21.x]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: src/shim/go.sum

      - name: Run build
        run: |
          make binaries
        working-directory: src/shim

      - name: Run unit test
        run: |
          go test -v ./...
        working-directory: src/shim

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.55.1
          args: -v --timeout 5m
          working-directory: 'src/shim'

  rust:
    name: rust basic checks
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
        project:
          - enclave-agent
          - runtime-boot/init

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          components: rustfmt, clippy

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check --manifest-path=src/${{ matrix.project }}/Cargo.toml

      - name: Run Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=src/${{ matrix.project }}/Cargo.toml

      - name: Run Tests
        if: ${{ matrix.project == 'enclave-agent' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features simple --no-default-features --manifest-path=src/${{ matrix.project }}/Cargo.toml
